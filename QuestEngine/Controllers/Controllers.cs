//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v12.0.10.0 (NJsonSchema v9.13.11.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace QuestEngine.Controllers
{
    #pragma warning disable

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.10.0 (NJsonSchema v9.13.11.0 (Newtonsoft.Json v11.0.0.0))")]
    public interface IProgressController
    {
        /// <summary>Update the Player progress on the active quest</summary>
        /// <param name="request">Progress Input</param>
        /// <returns>Progress Output</returns>
        System.Threading.Tasks.Task<ProgressOutput> PostProgressAsync(ProgressInput request);
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.10.0 (NJsonSchema v9.13.11.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ProgressController : Microsoft.AspNetCore.Mvc.Controller
    {
        private IProgressController _implementation;
    
        public ProgressController(IProgressController implementation)
        {
            _implementation = implementation;
        }
    
        /// <summary>Update the Player progress on the active quest</summary>
        /// <param name="request">Progress Input</param>
        /// <returns>Progress Output</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("api/progress")]
        public System.Threading.Tasks.Task<ProgressOutput> PostProgress([Microsoft.AspNetCore.Mvc.FromBody] ProgressInput request)
        {
            return _implementation.PostProgressAsync(request);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.10.0 (NJsonSchema v9.13.11.0 (Newtonsoft.Json v11.0.0.0))")]
    public interface IStateController
    {
        /// <summary>Show the state of the player on the active quest</summary>
        /// <param name="playerId">Player Id</param>
        /// <returns>State Output</returns>
        System.Threading.Tasks.Task<StateOutput> GetStatePlayerAsync(string playerId);
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.10.0 (NJsonSchema v9.13.11.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class StateController : Microsoft.AspNetCore.Mvc.Controller
    {
        private IStateController _implementation;
    
        public StateController(IStateController implementation)
        {
            _implementation = implementation;
        }
    
        /// <summary>Show the state of the player on the active quest</summary>
        /// <param name="playerId">Player Id</param>
        /// <returns>State Output</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/state/{playerId}")]
        public System.Threading.Tasks.Task<StateOutput> GetStatePlayer(string playerId)
        {
            return _implementation.GetStatePlayerAsync(playerId);
        }
    
    }
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.11.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProgressInput 
    {
        [Newtonsoft.Json.JsonProperty("PlayerId", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PlayerId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PlayerLevel", Required = Newtonsoft.Json.Required.Always)]
        public long PlayerLevel { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ChipAmountBet", Required = Newtonsoft.Json.Required.Always)]
        public long ChipAmountBet { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.11.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Milestone 
    {
        [Newtonsoft.Json.JsonProperty("MilestoneIndex", Required = Newtonsoft.Json.Required.Always)]
        public int MilestoneIndex { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ChipsAwarded", Required = Newtonsoft.Json.Required.Always)]
        public long ChipsAwarded { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.11.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProgressOutput 
    {
        [Newtonsoft.Json.JsonProperty("QuestPointsEarned", Required = Newtonsoft.Json.Required.Always)]
        public long QuestPointsEarned { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalQuestPercentCompleted", Required = Newtonsoft.Json.Required.Always)]
        public decimal TotalQuestPercentCompleted { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MilestonesCompleted", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<Milestone> MilestonesCompleted { get; set; } = new System.Collections.Generic.List<Milestone>();
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.11.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class StateOutput 
    {
        [Newtonsoft.Json.JsonProperty("TotalQuestPercentCompleted", Required = Newtonsoft.Json.Required.Always)]
        public decimal TotalQuestPercentCompleted { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastMilestoneIndexCompleted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? LastMilestoneIndexCompleted { get; set; }
    
    
    }

    #pragma warning restore
}